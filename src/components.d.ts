/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface MyComponentAttributes extends StencilHTMLAttributes {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }

  interface OverflowCarousel {
    'images': string[];
    'numCards': number;
    'title': string;
  }
  interface OverflowCarouselAttributes extends StencilHTMLAttributes {
    'images'?: string[];
    'numCards'?: number;
    'title'?: string;
  }

  interface TestCarousel {
    'cardWidth': number;
    /**
    * The first name
    */
    'images': string[];
    'title': string;
  }
  interface TestCarouselAttributes extends StencilHTMLAttributes {
    'cardWidth'?: number;
    /**
    * The first name
    */
    'images'?: string[];
    'title'?: string;
  }

  interface UiLoader {
    'gender': string;
  }
  interface UiLoaderAttributes extends StencilHTMLAttributes {
    'gender'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'MyComponent': Components.MyComponent;
    'OverflowCarousel': Components.OverflowCarousel;
    'TestCarousel': Components.TestCarousel;
    'UiLoader': Components.UiLoader;
  }

  interface StencilIntrinsicElements {
    'my-component': Components.MyComponentAttributes;
    'overflow-carousel': Components.OverflowCarouselAttributes;
    'test-carousel': Components.TestCarouselAttributes;
    'ui-loader': Components.UiLoaderAttributes;
  }


  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLOverflowCarouselElement extends Components.OverflowCarousel, HTMLStencilElement {}
  var HTMLOverflowCarouselElement: {
    prototype: HTMLOverflowCarouselElement;
    new (): HTMLOverflowCarouselElement;
  };

  interface HTMLTestCarouselElement extends Components.TestCarousel, HTMLStencilElement {}
  var HTMLTestCarouselElement: {
    prototype: HTMLTestCarouselElement;
    new (): HTMLTestCarouselElement;
  };

  interface HTMLUiLoaderElement extends Components.UiLoader, HTMLStencilElement {}
  var HTMLUiLoaderElement: {
    prototype: HTMLUiLoaderElement;
    new (): HTMLUiLoaderElement;
  };

  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement
    'overflow-carousel': HTMLOverflowCarouselElement
    'test-carousel': HTMLTestCarouselElement
    'ui-loader': HTMLUiLoaderElement
  }

  interface ElementTagNameMap {
    'my-component': HTMLMyComponentElement;
    'overflow-carousel': HTMLOverflowCarouselElement;
    'test-carousel': HTMLTestCarouselElement;
    'ui-loader': HTMLUiLoaderElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
